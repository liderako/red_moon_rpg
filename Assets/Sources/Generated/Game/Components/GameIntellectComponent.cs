//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public IntellectComponent intellect { get { return (IntellectComponent)GetComponent(GameComponentsLookup.Intellect); } }
    public bool hasIntellect { get { return HasComponent(GameComponentsLookup.Intellect); } }

    public void AddIntellect(int newValue) {
        var index = GameComponentsLookup.Intellect;
        var component = CreateComponent<IntellectComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceIntellect(int newValue) {
        var index = GameComponentsLookup.Intellect;
        var component = CreateComponent<IntellectComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveIntellect() {
        RemoveComponent(GameComponentsLookup.Intellect);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIntellect;

    public static Entitas.IMatcher<GameEntity> Intellect {
        get {
            if (_matcherIntellect == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Intellect);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIntellect = matcher;
            }

            return _matcherIntellect;
        }
    }
}
