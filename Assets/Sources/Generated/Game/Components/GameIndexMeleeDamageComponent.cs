//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public IndexMeleeDamageComponent indexMeleeDamage { get { return (IndexMeleeDamageComponent)GetComponent(GameComponentsLookup.IndexMeleeDamage); } }
    public bool hasIndexMeleeDamage { get { return HasComponent(GameComponentsLookup.IndexMeleeDamage); } }

    public void AddIndexMeleeDamage(int newMinValue, int newMaxValue) {
        var index = GameComponentsLookup.IndexMeleeDamage;
        var component = CreateComponent<IndexMeleeDamageComponent>(index);
        component.minValue = newMinValue;
        component.maxValue = newMaxValue;
        AddComponent(index, component);
    }

    public void ReplaceIndexMeleeDamage(int newMinValue, int newMaxValue) {
        var index = GameComponentsLookup.IndexMeleeDamage;
        var component = CreateComponent<IndexMeleeDamageComponent>(index);
        component.minValue = newMinValue;
        component.maxValue = newMaxValue;
        ReplaceComponent(index, component);
    }

    public void RemoveIndexMeleeDamage() {
        RemoveComponent(GameComponentsLookup.IndexMeleeDamage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherIndexMeleeDamage;

    public static Entitas.IMatcher<GameEntity> IndexMeleeDamage {
        get {
            if (_matcherIndexMeleeDamage == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.IndexMeleeDamage);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherIndexMeleeDamage = matcher;
            }

            return _matcherIndexMeleeDamage;
        }
    }
}
