//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class CharacterEntity {

    public AttentionComponent attention { get { return (AttentionComponent)GetComponent(CharacterComponentsLookup.Attention); } }
    public bool hasAttention { get { return HasComponent(CharacterComponentsLookup.Attention); } }

    public void AddAttention(int newValue) {
        var index = CharacterComponentsLookup.Attention;
        var component = CreateComponent<AttentionComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAttention(int newValue) {
        var index = CharacterComponentsLookup.Attention;
        var component = CreateComponent<AttentionComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAttention() {
        RemoveComponent(CharacterComponentsLookup.Attention);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class CharacterMatcher {

    static Entitas.IMatcher<CharacterEntity> _matcherAttention;

    public static Entitas.IMatcher<CharacterEntity> Attention {
        get {
            if (_matcherAttention == null) {
                var matcher = (Entitas.Matcher<CharacterEntity>)Entitas.Matcher<CharacterEntity>.AllOf(CharacterComponentsLookup.Attention);
                matcher.componentNames = CharacterComponentsLookup.componentNames;
                _matcherAttention = matcher;
            }

            return _matcherAttention;
        }
    }
}
