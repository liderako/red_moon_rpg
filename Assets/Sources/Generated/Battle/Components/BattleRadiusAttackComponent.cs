//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class BattleEntity {

    public RadiusAttackComponent radiusAttack { get { return (RadiusAttackComponent)GetComponent(BattleComponentsLookup.RadiusAttack); } }
    public bool hasRadiusAttack { get { return HasComponent(BattleComponentsLookup.RadiusAttack); } }

    public void AddRadiusAttack(float newValue) {
        var index = BattleComponentsLookup.RadiusAttack;
        var component = CreateComponent<RadiusAttackComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRadiusAttack(float newValue) {
        var index = BattleComponentsLookup.RadiusAttack;
        var component = CreateComponent<RadiusAttackComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRadiusAttack() {
        RemoveComponent(BattleComponentsLookup.RadiusAttack);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class BattleMatcher {

    static Entitas.IMatcher<BattleEntity> _matcherRadiusAttack;

    public static Entitas.IMatcher<BattleEntity> RadiusAttack {
        get {
            if (_matcherRadiusAttack == null) {
                var matcher = (Entitas.Matcher<BattleEntity>)Entitas.Matcher<BattleEntity>.AllOf(BattleComponentsLookup.RadiusAttack);
                matcher.componentNames = BattleComponentsLookup.componentNames;
                _matcherRadiusAttack = matcher;
            }

            return _matcherRadiusAttack;
        }
    }
}
