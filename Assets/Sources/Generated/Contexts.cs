//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ContextsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts : Entitas.IContexts {

    public static Contexts sharedInstance {
        get {
            if (_sharedInstance == null) {
                _sharedInstance = new Contexts();
            }

            return _sharedInstance;
        }
        set { _sharedInstance = value; }
    }

    static Contexts _sharedInstance;

    public BattleContext battle { get; set; }
    public GameContext game { get; set; }
    public GridContext grid { get; set; }
    public InputContext input { get; set; }
    public LifeContext life { get; set; }
    public TimeContext time { get; set; }

    public Entitas.IContext[] allContexts { get { return new Entitas.IContext [] { battle, game, grid, input, life, time }; } }

    public Contexts() {
        battle = new BattleContext();
        game = new GameContext();
        grid = new GridContext();
        input = new InputContext();
        life = new LifeContext();
        time = new TimeContext();

        var postConstructors = System.Linq.Enumerable.Where(
            GetType().GetMethods(),
            method => System.Attribute.IsDefined(method, typeof(Entitas.CodeGeneration.Attributes.PostConstructorAttribute))
        );

        foreach (var postConstructor in postConstructors) {
            postConstructor.Invoke(this, null);
        }
    }

    public void Reset() {
        var contexts = allContexts;
        for (int i = 0; i < contexts.Length; i++) {
            contexts[i].Reset();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EntityIndexGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

    public const string ActiveAvatar = "ActiveAvatar";
    public const string CellPointer = "CellPointer";
    public const string Name = "Name";
    public const string Persona = "Persona";

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeEntityIndices() {
        grid.AddEntityIndex(new Entitas.EntityIndex<GridEntity, bool>(
            ActiveAvatar,
            grid.GetGroup(GridMatcher.ActiveAvatar),
            (e, c) => ((ActiveAvatarComponent)c).value));
        game.AddEntityIndex(new Entitas.EntityIndex<GameEntity, bool>(
            ActiveAvatar,
            game.GetGroup(GameMatcher.ActiveAvatar),
            (e, c) => ((ActiveAvatarComponent)c).value));

        grid.AddEntityIndex(new Entitas.PrimaryEntityIndex<GridEntity, bool>(
            CellPointer,
            grid.GetGroup(GridMatcher.CellPointer),
            (e, c) => ((CellPointerComponent)c).value));

        game.AddEntityIndex(new Entitas.PrimaryEntityIndex<GameEntity, string>(
            Name,
            game.GetGroup(GameMatcher.Name),
            (e, c) => ((RedMoonRPG.NameComponent)c).name));
        time.AddEntityIndex(new Entitas.PrimaryEntityIndex<TimeEntity, string>(
            Name,
            time.GetGroup(TimeMatcher.Name),
            (e, c) => ((RedMoonRPG.NameComponent)c).name));
        grid.AddEntityIndex(new Entitas.PrimaryEntityIndex<GridEntity, string>(
            Name,
            grid.GetGroup(GridMatcher.Name),
            (e, c) => ((RedMoonRPG.NameComponent)c).name));
        battle.AddEntityIndex(new Entitas.PrimaryEntityIndex<BattleEntity, string>(
            Name,
            battle.GetGroup(BattleMatcher.Name),
            (e, c) => ((RedMoonRPG.NameComponent)c).name));
        input.AddEntityIndex(new Entitas.PrimaryEntityIndex<InputEntity, string>(
            Name,
            input.GetGroup(InputMatcher.Name),
            (e, c) => ((RedMoonRPG.NameComponent)c).name));

        game.AddEntityIndex(new Entitas.EntityIndex<GameEntity, string>(
            Persona,
            game.GetGroup(GameMatcher.Persona),
            (e, c) => ((RedMoonRPG.PersonaComponent)c).value));
    }
}

public static class ContextsExtensions {

    public static System.Collections.Generic.HashSet<GridEntity> GetEntitiesWithActiveAvatar(this GridContext context, bool value) {
        return ((Entitas.EntityIndex<GridEntity, bool>)context.GetEntityIndex(Contexts.ActiveAvatar)).GetEntities(value);
    }

    public static System.Collections.Generic.HashSet<GameEntity> GetEntitiesWithActiveAvatar(this GameContext context, bool value) {
        return ((Entitas.EntityIndex<GameEntity, bool>)context.GetEntityIndex(Contexts.ActiveAvatar)).GetEntities(value);
    }

    public static GridEntity GetEntityWithCellPointer(this GridContext context, bool value) {
        return ((Entitas.PrimaryEntityIndex<GridEntity, bool>)context.GetEntityIndex(Contexts.CellPointer)).GetEntity(value);
    }

    public static GameEntity GetEntityWithName(this GameContext context, string name) {
        return ((Entitas.PrimaryEntityIndex<GameEntity, string>)context.GetEntityIndex(Contexts.Name)).GetEntity(name);
    }

    public static TimeEntity GetEntityWithName(this TimeContext context, string name) {
        return ((Entitas.PrimaryEntityIndex<TimeEntity, string>)context.GetEntityIndex(Contexts.Name)).GetEntity(name);
    }

    public static GridEntity GetEntityWithName(this GridContext context, string name) {
        return ((Entitas.PrimaryEntityIndex<GridEntity, string>)context.GetEntityIndex(Contexts.Name)).GetEntity(name);
    }

    public static BattleEntity GetEntityWithName(this BattleContext context, string name) {
        return ((Entitas.PrimaryEntityIndex<BattleEntity, string>)context.GetEntityIndex(Contexts.Name)).GetEntity(name);
    }

    public static InputEntity GetEntityWithName(this InputContext context, string name) {
        return ((Entitas.PrimaryEntityIndex<InputEntity, string>)context.GetEntityIndex(Contexts.Name)).GetEntity(name);
    }

    public static System.Collections.Generic.HashSet<GameEntity> GetEntitiesWithPersona(this GameContext context, string value) {
        return ((Entitas.EntityIndex<GameEntity, string>)context.GetEntityIndex(Contexts.Persona)).GetEntities(value);
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.VisualDebugging.CodeGeneration.Plugins.ContextObserverGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class Contexts {

#if (!ENTITAS_DISABLE_VISUAL_DEBUGGING && UNITY_EDITOR)

    [Entitas.CodeGeneration.Attributes.PostConstructor]
    public void InitializeContexObservers() {
        try {
            CreateContextObserver(battle);
            CreateContextObserver(game);
            CreateContextObserver(grid);
            CreateContextObserver(input);
            CreateContextObserver(life);
            CreateContextObserver(time);
        } catch(System.Exception) {
        }
    }

    public void CreateContextObserver(Entitas.IContext context) {
        if (UnityEngine.Application.isPlaying) {
            var observer = new Entitas.VisualDebugging.Unity.ContextObserver(context);
            UnityEngine.Object.DontDestroyOnLoad(observer.gameObject);
        }
    }

#endif
}
