//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InventoryEntity {

    public TypeWeaponComponent typeWeapon { get { return (TypeWeaponComponent)GetComponent(InventoryComponentsLookup.TypeWeapon); } }
    public bool hasTypeWeapon { get { return HasComponent(InventoryComponentsLookup.TypeWeapon); } }

    public void AddTypeWeapon(WeaponType newValue) {
        var index = InventoryComponentsLookup.TypeWeapon;
        var component = CreateComponent<TypeWeaponComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTypeWeapon(WeaponType newValue) {
        var index = InventoryComponentsLookup.TypeWeapon;
        var component = CreateComponent<TypeWeaponComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTypeWeapon() {
        RemoveComponent(InventoryComponentsLookup.TypeWeapon);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InventoryMatcher {

    static Entitas.IMatcher<InventoryEntity> _matcherTypeWeapon;

    public static Entitas.IMatcher<InventoryEntity> TypeWeapon {
        get {
            if (_matcherTypeWeapon == null) {
                var matcher = (Entitas.Matcher<InventoryEntity>)Entitas.Matcher<InventoryEntity>.AllOf(InventoryComponentsLookup.TypeWeapon);
                matcher.componentNames = InventoryComponentsLookup.componentNames;
                _matcherTypeWeapon = matcher;
            }

            return _matcherTypeWeapon;
        }
    }
}
